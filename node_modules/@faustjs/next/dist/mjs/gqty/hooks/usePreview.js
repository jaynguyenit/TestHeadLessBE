// eslint-disable-next-line import/extensions
import { PageIdType, PostIdType } from '@faustjs/core/client';
import isUndefined from 'lodash/isUndefined.js';
import { useRouter } from 'next/router.js';
import { hasPageId, hasPostId } from '../../utils/index.js';
export function create(useAuth, useQuery) {
    function usePreview() {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        const { query: { p, page_id: pageId }, } = useRouter();
        const { isAuthenticated } = useAuth();
        const { post: postQuery, page: pageQuery } = useQuery();
        const isPage = !!pageId;
        const args = {
            pageId: isPage ? p : undefined,
            postId: !isPage ? p : undefined,
        };
        if (isUndefined(isAuthenticated) || isAuthenticated !== true) {
            return;
        }
        if (hasPageId(args)) {
            const page = pageQuery({
                id: (_a = args === null || args === void 0 ? void 0 : args.pageId) !== null && _a !== void 0 ? _a : '',
                idType: PageIdType.DATABASE_ID,
            });
            const mostRecentPageRevision = (_d = (_c = (_b = page === null || page === void 0 ? void 0 : page.revisions({ first: 1 })) === null || _b === void 0 ? void 0 : _b.edges) === null || _c === void 0 ? void 0 : _c[0]) === null || _d === void 0 ? void 0 : _d.node;
            // eslint-disable-next-line consistent-return
            return {
                type: 'page',
                page: (mostRecentPageRevision === null || mostRecentPageRevision === void 0 ? void 0 : mostRecentPageRevision.id) ? mostRecentPageRevision : page,
            };
        }
        if (hasPostId(args)) {
            const post = postQuery({
                id: (_e = args === null || args === void 0 ? void 0 : args.postId) !== null && _e !== void 0 ? _e : '',
                idType: PostIdType.DATABASE_ID,
            });
            const mostRecentPostRevision = (_h = (_g = (_f = post === null || post === void 0 ? void 0 : post.revisions({ first: 1 })) === null || _f === void 0 ? void 0 : _f.edges) === null || _g === void 0 ? void 0 : _g[0]) === null || _h === void 0 ? void 0 : _h.node;
            // eslint-disable-next-line consistent-return
            return {
                type: 'post',
                post: (mostRecentPostRevision === null || mostRecentPostRevision === void 0 ? void 0 : mostRecentPostRevision.id) ? mostRecentPostRevision : post,
            };
        }
    }
    return usePreview;
}
